<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPlayerGender.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>